// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/client/unisender/unisender.go

// Package mock_unisender is a generated GoMock package.
package mock_unisender

import (
	context "context"
	reflect "reflect"
	unisender "week3_docker/internal/client/unisender"

	gomock "github.com/golang/mock/gomock"
)

// MockIUnisenderClient is a mock of IUnisenderClient interface.
type MockIUnisenderClient struct {
	ctrl     *gomock.Controller
	recorder *MockIUnisenderClientMockRecorder
}

// MockIUnisenderClientMockRecorder is the mock recorder for MockIUnisenderClient.
type MockIUnisenderClientMockRecorder struct {
	mock *MockIUnisenderClient
}

// NewMockIUnisenderClient creates a new mock instance.
func NewMockIUnisenderClient(ctrl *gomock.Controller) *MockIUnisenderClient {
	mock := &MockIUnisenderClient{ctrl: ctrl}
	mock.recorder = &MockIUnisenderClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUnisenderClient) EXPECT() *MockIUnisenderClientMockRecorder {
	return m.recorder
}

// CreateList mocks base method.
func (m *MockIUnisenderClient) CreateList(ctx context.Context, apiKey, listTitle string) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateList", ctx, apiKey, listTitle)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateList indicates an expected call of CreateList.
func (mr *MockIUnisenderClientMockRecorder) CreateList(ctx, apiKey, listTitle interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateList", reflect.TypeOf((*MockIUnisenderClient)(nil).CreateList), ctx, apiKey, listTitle)
}

// DeleteList mocks base method.
func (m *MockIUnisenderClient) DeleteList(ctx context.Context, apiKey string, listID uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteList", ctx, apiKey, listID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteList indicates an expected call of DeleteList.
func (mr *MockIUnisenderClientMockRecorder) DeleteList(ctx, apiKey, listID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteList", reflect.TypeOf((*MockIUnisenderClient)(nil).DeleteList), ctx, apiKey, listID)
}

// GetLists mocks base method.
func (m *MockIUnisenderClient) GetLists(ctx context.Context, apiKey string) (unisender.GetListsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLists", ctx, apiKey)
	ret0, _ := ret[0].(unisender.GetListsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLists indicates an expected call of GetLists.
func (mr *MockIUnisenderClientMockRecorder) GetLists(ctx, apiKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLists", reflect.TypeOf((*MockIUnisenderClient)(nil).GetLists), ctx, apiKey)
}

// ImportContacts mocks base method.
func (m *MockIUnisenderClient) ImportContacts(ctx context.Context, req unisender.ImportContactsRequest) (unisender.ImportContactsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportContacts", ctx, req)
	ret0, _ := ret[0].(unisender.ImportContactsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ImportContacts indicates an expected call of ImportContacts.
func (mr *MockIUnisenderClientMockRecorder) ImportContacts(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportContacts", reflect.TypeOf((*MockIUnisenderClient)(nil).ImportContacts), ctx, req)
}
