syntax = "proto3";

option go_package = "service/contact";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

package contact_service;

service ContactService {
  // Добавление виджета
  rpc AuthIntegration(AuthIntegrationRequest) returns (google.protobuf.Empty) {
    option(google.api.http) = { get: "/api/oauth/sign_in" };
  }

  // Список контактов в amoCRM
  rpc ListContacts(ListContactsRequest) returns (ListContactsResponse) {
    option(google.api.http) = { get: "/api/account/{id}/contacts" };
  }

  // Список учетных записей
  rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse) {
    option(google.api.http) = { get: "/api/accounts" };
  }

  // Список интеграций аккаунта
  rpc ListAccountIntegrations(ListAccountIntegrationsRequest) returns (ListAccountIntegrationsResponse) {
    option(google.api.http) = { get: "/api/account/{id}/integrations" };
  }

  // Информация об аккаунте
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {
    option(google.api.http) = { get: "/api/account/{id}" };
  }

  // Отписка учетной записи
  rpc UnsubAccount(UnsubAccountRequest) returns (google.protobuf.Empty) {
    option(google.api.http) = { get: "/api/account/{id}/contacts/hook/unsub" };
  }
}

message AuthIntegrationRequest {
  string code = 1; // код авторизации
  string state = 2; // передается от виджета
  string referer = 3; // поддомен vasya.amocrm.ru
  int32 platform = 4;
  string client_id = 5; // id интеграции
}

message ListContactsRequest {
  uint64 id = 1;
  int32 page = 2;
  int32 limit = 3;
  string type = 4;
  optional bool sync = 5;
}

message ListContactsResponse {
  repeated Contact items = 1;
}

message Contact {
  uint64 id = 1;
  uint64 amo_id = 2;
  uint64 account_id = 3;
  string name = 4;
  string email = 5;
  string type = 6;
  bool sync = 7;
  string reason_out_sync = 8;
  uint64 created_at = 9;
  uint64 updated_at = 10;
}

message ListAccountsRequest {
  int32 page = 1;
  int32 limit = 2;
  optional bool amo_auth = 3;
}

message ListAccountsResponse {
  repeated Account items = 1;
}

message Account {
  uint64 id = 1;
  string subdomain = 2;
  bool amo_auth = 3;
  bool unisender_connected = 4;
  uint64 created_at = 5;
  uint64 updated_at = 6;
}

message ListAccountIntegrationsRequest {
  int32 id = 1;
  int32 page = 2;
  int32 limit = 3;
}

message ListAccountIntegrationsResponse {
  repeated AccountIntegration items = 1;
}

message AccountIntegration {
  uint64 id = 1;
  string outer_id = 2;
  uint64 created_at = 3;
  uint64 updated_at = 4;
}

message PrimaryContactSyncRequest {
  bytes rawData = 1;
}

message GetAccountRequest {
  uint64 id = 1;
}

message GetAccountResponse {
  Account account = 1;
}

message ContactActionsHookRequest {
  uint64 id = 1;
  bytes rawData = 2;
}

message AmoContact {
  uint64 id = 1;
  string name = 2;
  uint64 responsible_user_id = 3;
  uint64 date_create = 4;
  uint64 last_modified = 5;
  uint64 created_user_id = 6;
  uint64 modified_user_id = 7;
  string company_name = 8;
  uint64 linked_company_id = 9;
  uint64 account_id = 10;
  repeated Custom_fields custom_fields = 11;
  uint64 created_at = 12;
  uint64 updated_at = 13;
  string type = 14;

  message Values {
    string value = 1;
    string enum = 2;
    string code = 3;
  }

  message Custom_fields {
    uint64 id = 1;
    string name = 2;
    repeated Values values = 3;
    string code = 4;
  }
}


message UnsubAccountRequest {
  uint64 id = 1;
}

message ContactSyncRequest {
  uint64 account_id = 1;
  string unisender_key = 2;
}

message ContactActionsTask {
  uint64 account_id = 1;
  string unisender_key = 2;
  uint64 unisender_list_id = 3;
  repeated AmoContact contacts = 4;
}
